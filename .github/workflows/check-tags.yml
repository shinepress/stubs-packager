name: Check Tags

on:
  repository_dispatch:
    types: [check-tags]

permissions:
  contents: write

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check for Changes - ${{ github.event.client_payload.target }}
    outputs:
      changes: ${{ steps.check.outputs.changes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2
      - name: Install Dependencies
        run: composer install --no-interaction
      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets[github.event.client_payload.key] }}
      - name: Check for Changes
        id: check
        run: echo "changes=$(./bin/find-changes --working-dir=./tmp ${{ github.event.client_payload.source }} ${{ github.event.client_payload.path }} ${{ github.event.client_payload.target }})" >> "$GITHUB_OUTPUT"

  dispatch:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.changes != '[]' }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.check.outputs.changes) }}
    name: Dispatch ${{ matrix.tag }} (${{ matrix.name }})
    steps:
      - id: name
        name: Get Event Name
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ matrix.name }}-tag
      - name: Dispatch Event
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: ${{ steps.name.outputs.lowercase }}
          client-payload: '{"key": "${{ github.event.client_payload.key }}", "tag": "${{ matrix.tag }}", "source": "${{ github.event.client_payload.source }}", "path": "${{ github.event.client_payload.path }}", "target": "${{ github.event.client_payload.target }}"}'